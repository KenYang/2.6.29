#ifndef __I2C_REG_H_INCLUDED
#define __I2C_REG_H_INCLUDED

/*
 *  Registers
 *  */
#define SOCLE_I2C_MTXR 0x0000	/* master transmit register input */
#define SOCLE_I2C_MRXR 0x0004	/* master receive register ouput */
#define SOCLE_I2C_STXR 0x0008	/* slave transmit register input */
#define SOCLE_I2C_SRXR 0x000C	/* slave receive register output */
#define SOCLE_I2C_SADDR 0x0010	/* I2C controller slave address */
#define SOCLE_I2C_IER 0x0014	/* enable/mask interrupts generated by the I2C controller */
#define SOCLE_I2C_ISR 0x0018	/* interrupt status register */
#define SOCLE_I2C_LCMR 0x001C	/* I2C line command register */
#define SOCLE_I2C_LSR 0x0020	/* I2C core status */
#define SOCLE_I2C_CONR 0x0024	/* I2C operation register 1 */
#define SOCLE_I2C_OPR 0x0028	/* I2C operation register 2 */

/*
 *  SOCLE_I2C_IER
 *  */
/* Arbitration lose interrupt enable bit */
#define SOCLE_I2C_ARBIT_LOSE_INT_DIS 0x0 /* disable */
#define SOCLE_I2C_ARBIT_LOSE_INT_EN (0x1 << 7) /* enable */

/* Abnormal stop interrupt enable bit */
#define SOCLE_I2C_ABNORMAL_STP_INT_DIS 0x0 /* disable */
#define SOCLE_I2C_ABNORMAL_STP_INT_EN (0x1 << 6) /* enable */

/* Broadcast address matches (address zero) interrupt enable bit*/
#define SOCLE_I2C_BROADCAST_ADDR_INT_DIS 0x0	/* disable */
#define SOCLE_I2C_BROADCAST_ADDR_INT_EN (0x1 << 5) /* enable */

/* Slave address matches interrupt enable bit */
#define SOCLE_I2C_SLAVE_ADDR_INT_DIS 0x0 /* disable */
#define SOCLE_I2C_SLAVE_ADDR_INT_EN (0x1 << 4) /* enable */

/* Slave ACK period interrupt enable bit (SRX mode) */
#define SOCLE_I2C_SLAVE_ACK_PERIOD_INT_DIS 0x0	/* disable */
#define SOCLE_I2C_SLAVE_ACK_PERIOD_INT_EN (0x1 << 3) /* enable */

/* Slave receives ACK interrupt enable bit (STX mode) */
#define SOCLE_I2C_SLAVE_RECV_ACK_INT_DIS 0x0 /* disable */
#define SOCLE_I2C_SLAVE_RECV_ACK_INT_EN (0x1 << 2) /* enable */

/* Master ACK period interrupt enable bit (MRX mode) */
#define SOCLE_I2C_MASTER_ACK_PERIOD_INT_DIS 0x0	/* disable */
#define SOCLE_I2C_MASTER_ACK_PERIOD_INT_EN (0x1 << 1) /* enable */

/* Master receives ACK interrupt enable bit (MTX mode) */
#define SOCLE_I2C_MASTER_RECV_ACK_INT_DIS 0x0 /* disable */
#define SOCLE_I2C_MASTER_RECV_ACK_INT_EN 0x1 /* enable */

/*
 *  SOCLE_I2C_ISR
 *  */
/* Arbitration lose status bit */
#define SOCLE_I2C_ARBIT_LOSE_INT (0x1 << 7) /* arbitration lose occurs */

/* Abnormal stop status bit */
#define SOCLE_I2C_ABNORMAL_STP_INT (0x1 << 6) /* abnormal stop occurs */

/* Broadcast address (address zero) matches status bit */
#define SOCLE_I2C_BROADCAST_ADDR_INT (0x1 << 5) /* broadcast address matches */

/* Slave address matches status bit */
#define SOCLE_I2C_SLAVE_ADDR_INT (0x1 << 4) /* slave address matches */

/* Slave ACK period interrupt status bit (SRX mode) */
#define SOCLE_I2C_SLAVE_ACK_PERIOD_INT (0x1 << 3) /* interrupt generation */

/* Slave receive ACK interrupt status bit (STX mode) */
#define SOCLE_I2C_SLAVE_RECV_ACK_INT (0x1 << 2)	/* interrupt generation */

/* Master ACK period interrupt status bit (MRX mode) */
#define SOCLE_I2C_MASTER_ACK_PERIOD_INT (0x1 << 1) /* interrupt generation */

/* Master receives ACK interrupt status bit (MTX mode) */
#define SOCLE_I2C_MASTER_RECV_ACK_INT 0x1 /* interrupt generation */

/*
 *  SOCLE_I2C_LCMR
 *  */
/* "RESUME" condition generation bit */
#define SOCLE_I2C_RESUME_COND_GEN_DIS 0x0 /* disalbe */
#define SOCLE_I2C_RESUME_COND_GEN_EN (0x1 << 2)	/* enable */

/* "STOP" condition generation bit*/
#define SOCLE_I2C_STP_COND_GEN_DIS 0x0 /* disable */
#define SOCLE_I2C_STP_COND_GEN_EN (0x1 << 1) /* enable */

/* "START" condition generation bit */
#define SOCLE_I2C_STR_COND_GEN_DIS 0x0 /* disable */
#define SOCLE_I2C_STR_COND_GEN_EN 0x1 /* enable */

/*
 *  SOCLE_I2C_LSR
 *  */
/* I2C receives ACK status bit (MTX and STRX modes) */
#define SOCLE_I2C_RECV_STAT_ACK 0x0	/* I2C bus receives ACK */
#define SOCLE_I2C_RECV_STAT_NAK (0x1 << 1) /* I2C bus receives NAK */

/* I2C core busy status bit */
#define SOCLE_I2C_AFTER_STP_COND_DET 0x0 /* after stop condition detect */
#define SOCLE_I2C_AFTER_STR_COND_DET 0x1 /* after start condition detect */


/*
 *  SOCLE_I2C_CONR
 *  */
/* I2C bus acknowledge enable register */
#define SOCLE_I2C_BUS_ACK_EN 0x0 /* enable (ACK)*/
#define SOCLE_I2C_BUS_ACK_DIS (0x1 << 4) /* disable (NAK) */

/* Master receive/transmit mode select bit */
#define SOCLE_I2C_MASTER_RECV_SEL 0x0 /* receive */
#define SOCLE_I2C_MASTER_TRAN_SEL (0x1 << 3) /* transmit */

/* Master port enable bit */
#define SOCLE_I2C_MASTER_PORT_DIS 0x0 /* disable */
#define SOCLE_I2C_MASTER_PORT_EN (0x1 << 2) /* enable */

/* Slave receive/transmit mode select bit */
#define SOCLE_I2C_SLAVE_RECV_SEL 0x0 /* receive */
#define SOCLE_I2C_SLAVE_TRAN_SEL (0x1 << 1) /* transmit */

/* Slave port enable bit */
#define SOCLE_I2C_SLAVE_PORT_DIS 0x0 /* disable */
#define SOCLE_I2C_SLAVE_PORT_EN 0x1 /* enable */

/*
 *  SOCLE_I2C_OPR
 *  */
/* I2C slave address mode bit */
#define SOCLE_I2C_ADDR_7_BITS 0x0 /* 7 bits address mode */
#define SOCLE_I2C_ADDR_10_BITS (0x1 << 8) /* 10 bits address mode */

/* I2C state machine (both master/slave) reset bit */
#define SOCLE_I2C_N_RST 0x0	/* don't reset state machine */
#define SOCLE_I2C_RST (0x1 << 7) /* reset state machine */

/* I2C core enable bit */
#define SOCLE_I2C_CORE_DIS 0x0	/* disable I2C controller */
#define SOCLE_I2C_CORE_EN (0x1 << 6) /* enable I2C controller */

/* I2C clock divisor bits (I2CCDVR) */
#define SOCLE_I2C_CLK_DIVISOR(x) ((x) & 0x3F)
#endif
